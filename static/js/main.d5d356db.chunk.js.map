{"version":3,"sources":["components/InputFields/InputFields.js","components/ResultsTable/ResultsTable.js","components/MyFooter.js","App.js","reportWebVitals.js","index.js"],"names":["InputFields","_ref","initialValues","onInputChange","isUsingEur","handleInputChange","setIsUsingEur","fieldName","value","numericValue","parseFloat","sanitizedValue","isNaN","React","createElement","TextField","label","type","variant","initialAmount","onChange","e","target","fullWidth","margin","monthlyDeposit","helperText","interestRate","targetMonthlyInterestEarned","ResultsTable","results","themeMode","tableCurrency","themeModeClass","currencySymbol","className","map","result","index","key","highlight","year","totalAmount","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","toFixed","interestEarned","monthlyInterestEarned","Footer","Typography","color","align","Date","getFullYear","lightTheme","createTheme","typography","fontFamily","darkTheme","palette","mode","App","_useState","useState","_useState2","_slicedToArray","setInitialValues","_useState3","_useState4","setThemeMode","_useState5","_useState6","setResults","_useState7","_useState8","setTableCurrency","prevValues","_objectSpread","ThemeProvider","theme","CssBaseline","gutterBottom","IconButton","onClick","Brightness4","Brightness7","field","_defineProperty","Button","calculatedResults","years","isTargetAchieved","push","startingAmount","calculateResults","firstTargetAchievedIndex","findIndex","length","Fragment","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d5d356db.chunk.js","sourcesContent":["// InputFields.js\r\nimport React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst InputFields = ({ initialValues, onInputChange, isUsingEur, setIsUsingEur }) => {\r\n  const handleInputChange = (fieldName, value) => {\r\n    const numericValue = parseFloat(value); // Convert the input value to a number\r\n    const sanitizedValue = isNaN(numericValue) ? \"\" : numericValue; // Use empty string if NaN\r\n    onInputChange(fieldName, sanitizedValue);\r\n  };\r\n\r\n  const toggleInputCurrency = () => {\r\n    setIsUsingEur(!isUsingEur);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        label={isUsingEur ? 'Initial Amount (EUR)' : 'Initial Amount (RON)'}\r\n        type=\"number\"\r\n        variant=\"outlined\"\r\n        value={initialValues.initialAmount}\r\n        onChange={(e) => handleInputChange('initialAmount', e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label={isUsingEur ? 'Monthly Deposit(EUR)' : 'Monthly Deposit(RON)'}\r\n        type=\"number\"\r\n        variant=\"outlined\"\r\n        value={initialValues.monthlyDeposit}\r\n        onChange={(e) => handleInputChange('monthlyDeposit', e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        helperText=\"Enter the monthly deposit\"\r\n      />\r\n      <TextField\r\n        label=\"Interest Rate (%)\"\r\n        type=\"number\"\r\n        variant=\"outlined\"\r\n        value={initialValues.interestRate}\r\n        onChange={(e) => handleInputChange('interestRate', e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n       <TextField\r\n        label={isUsingEur ? 'Target Monthly Interest(EUR)' : 'Target Monthly Interest (RON)'}\r\n        type=\"number\"\r\n        variant=\"outlined\"\r\n        value={initialValues.targetMonthlyInterestEarned}\r\n        onChange={(e) => handleInputChange('targetMonthlyInterestEarned', e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default InputFields;\r\n","// ResultsTable.js\r\nimport React from 'react';\r\nimport '../../styles.css';\r\n\r\nconst ResultsTable = ({ results, themeMode, tableCurrency }) => {\r\n  const themeModeClass = themeMode === 'light' ? 'light-mode' : 'dark-mode';\r\n  const currencySymbol = tableCurrency ? 'EUR' : 'RON';\r\n\r\n\r\n  return (\r\n    <table>\r\n      <thead className={themeModeClass}>\r\n        <tr>\r\n          <th>Year</th>\r\n          <th>Starting Amount</th>\r\n          <th>Yearly Deposit</th>\r\n          <th>Interest Rate (%)</th>\r\n          <th>Interest Earned</th>\r\n          <th>Monthly Interest Earned</th>\r\n          <th>Total Amount</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {results.map((result, index) => (\r\n          <tr key={index}\r\n          className={result.highlight ? 'highlighted-row' : ''}\r\n          >\r\n            <td>{result.year}</td>\r\n            <td>{tableCurrency\r\n                ? (result.totalAmount / 5).toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })\r\n                : result.totalAmount.toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })}{' '}\r\n              {currencySymbol}</td>\r\n            <td>{tableCurrency\r\n                ? (result.monthlyDeposit / 5).toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })\r\n                : result.monthlyDeposit.toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })}{' '}\r\n              {currencySymbol}</td>\r\n            <td>{result.interestRate.toFixed(2)}</td>\r\n            <td>{tableCurrency\r\n                ? (result.interestEarned / 5).toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })\r\n                : result.interestEarned.toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })}{' '}\r\n              {currencySymbol}</td>\r\n            <td>{tableCurrency\r\n                ? (result.monthlyInterestEarned / 5).toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })\r\n                : result.monthlyInterestEarned.toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })}{' '}\r\n              {currencySymbol}</td>\r\n            <td>{tableCurrency\r\n                ? (result.totalAmount / 5).toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })\r\n                : result.totalAmount.toLocaleString(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })}{' '}\r\n              {currencySymbol}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\n\r\nexport default ResultsTable;\r\n\r\n","// Footer.js\r\nimport React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        Created by Your Name | Financial Freedom Calculator | {new Date().getFullYear()}\r\n      </Typography>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","// App.js\nimport React, { useState } from 'react';\nimport InputFields from './components/InputFields/InputFields';\nimport ResultsTable from './components/ResultsTable/ResultsTable';\nimport Footer from './components/MyFooter'; \nimport { CssBaseline, ThemeProvider, createTheme, Button, Typography } from '@mui/material';\nimport { IconButton } from '@mui/material';\nimport { Brightness4, Brightness7 } from '@mui/icons-material';\nimport { EuroSymbol, MonetizationOn } from '@mui/icons-material';\nimport './App.css'; // Import styles.css\nimport './styles.css';\n\n// Create a custom Material-UI theme\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Roboto, sans-serif', // Use your chosen font\n  },\n});\nconst lightTheme = createTheme();\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\n\n// Calculation logic function\nconst calculateResults = (initialAmount, monthlyDeposit, interestRate, targetMonthlyInterestEarned, years) => {\n  const results = [];\n\n  let totalAmount = initialAmount;\n  for (let year = 1; year <= years; year++) {\n    const interestEarned = (totalAmount * interestRate) / 100 ; // Monthly interest\n    const monthlyInterestEarned = interestEarned / 12; // Calculate monthly interest earned\n    const isTargetAchieved = monthlyInterestEarned >= targetMonthlyInterestEarned; // Calculate target achievement\n    totalAmount += monthlyDeposit * 12 + interestEarned;\n\n    results.push({\n      year,\n      startingAmount: totalAmount - (monthlyDeposit * 12 + interestEarned),\n      monthlyDeposit: monthlyDeposit*12,\n      interestRate,\n      interestEarned,\n      monthlyInterestEarned,\n      totalAmount,\n      isTargetAchieved,\n    });\n  }\n\n  return results;\n};\n\nconst App = () => {\n  const [initialValues, setInitialValues] = useState({\n    initialAmount: 1000,\n    monthlyDeposit : 100,\n    interestRate: 7,\n    isUsingEur: false, // Flag for input value conversion\n  });\n  const [themeMode, setThemeMode] = useState('light'); // Store the current theme mode\n  // Toggle between light and dark mode\n  const toggleThemeMode = () => {\n    setThemeMode(themeMode === 'light' ? 'dark' : 'light');\n  };\n\n  const [results, setResults] = useState([]);\n  const [tableCurrency, setTableCurrency] = useState(false); // State for table currency\n  const setIsUsingEur = () => {\n    setInitialValues((prevValues) => ({\n      ...prevValues,\n      isUsingEur: !prevValues.isUsingEur,\n    }));\n  };\n\n  // Event handler for input changes\n  const handleInputChange = (field, value) => {\n    setInitialValues((prevValues) => ({\n      ...prevValues,\n      [field]: parseFloat(value), // Convert to float if needed\n    }));\n  };\n\n  const handleCalculate = () => {\n    const calculatedResults = calculateResults(\n      initialValues.initialAmount,\n      initialValues.monthlyDeposit ,\n      initialValues.interestRate,\n      initialValues.targetMonthlyInterestEarned,\n      50 // Number of years you want to calculate\n    );\n    \n  // Find the index of the first result that meets the condition\n  const firstTargetAchievedIndex = calculatedResults.findIndex(result => result.isTargetAchieved);\n\n  // Set the highlight flag for the first result that meets the condition\n  if (firstTargetAchievedIndex !== -1) {\n    calculatedResults[firstTargetAchievedIndex].highlight = true;\n  }\n    setResults(calculatedResults);\n  };\n\n\n\n  return (\n    <ThemeProvider theme={themeMode === 'light' ? lightTheme : darkTheme}>\n      <CssBaseline />\n      <div className=\"App\">\n      <div className=\"app-container\">\n          <Typography variant=\"h2\" gutterBottom className=\"title\">\n            Financial Freedom Calculator\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            onClick={toggleThemeMode}\n            className=\"theme-toggle-button\"\n          >\n            {themeMode === 'light' ? <Brightness4 /> : <Brightness7 />}\n          </IconButton>\n          <div className=\"toggle-button\">\n           <IconButton color=\"inherit\" onClick={setIsUsingEur}>\n             {initialValues.isUsingEur ? <strong>EURO</strong> : <strong>RON</strong>}\n           </IconButton>\n          </div>\n              <InputFields\n                initialValues={initialValues}\n                onInputChange={handleInputChange}\n                isUsingEur={initialValues.isUsingEur}\n                setIsUsingEur={setIsUsingEur} // Pass the setIsUsingEur prop\n              />\n\n          <Button variant=\"contained\" onClick={handleCalculate} color=\"primary\">\n            Calculate\n          </Button>\n          {results.length > 0 && (\n          <>\n          <div>\n          <div className=\"toggle-button\">\n          <IconButton\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setTableCurrency(!tableCurrency)}\n          >\n            {tableCurrency ? <strong>EURO</strong> : <strong>RON</strong>}\n          </IconButton>\n          </div>\n          </div>\n            <ResultsTable results={results} themeMode={themeMode} tableCurrency={tableCurrency} />\n            </>\n          )}\n        </div>\n        <Footer />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}