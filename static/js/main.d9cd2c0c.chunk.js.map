{"version":3,"sources":["components/InputFields/InputFields.js","components/ResultsTable/ResultsTable.js","components/ExportButton.js","App.js","reportWebVitals.js","index.js"],"names":["InputFields","_ref","initialValues","onInputChange","React","createElement","TextField","label","type","variant","value","initialAmount","onChange","e","target","fullWidth","margin","monthlyDeposit","helperText","interestRate","ResultsTable","results","map","result","index","key","year","startingAmount","toFixed","interestEarned","totalAmount","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ExportButton","handleExport","_ref2","_asyncToGenerator","_callee","workbook","worksheet","blob","url","a","_context","ExcelJS","Workbook","addWorksheet","columns","header","addRow","xlsx","writeBuffer","URL","createObjectURL","Blob","document","href","download","click","revokeObjectURL","apply","arguments","style","marginTop","Button","onClick","color","theme","createTheme","typography","fontFamily","App","_useState","useState","_useState2","_slicedToArray","setInitialValues","_useState3","_useState4","setResults","ThemeProvider","CssBaseline","className","Typography","gutterBottom","field","prevValues","_objectSpread","_defineProperty","parseFloat","calculatedResults","years","calculateResults","Fragment","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d9cd2c0c.chunk.js","sourcesContent":["// InputFields.js\r\nimport React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst InputFields = ({ initialValues, onInputChange }) => {\r\n  return (\r\n    <div>\r\n      <TextField\r\n        label=\"Initial Amount\"\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        value={initialValues.initialAmount}\r\n        onChange={(e) => onInputChange('initialAmount', e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Monthly Deposit\"\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        value={initialValues.monthlyDeposit}\r\n        onChange={(e) => onInputChange('monthlyDeposit', e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        helperText=\"Enter the monthly deposit\"\r\n      />\r\n      <TextField\r\n        label=\"Interest Rate (%)\"\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        value={initialValues.interestRate}\r\n        onChange={(e) => onInputChange('interestRate', e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputFields;\r\n","// ResultsTable.js\r\nimport React from 'react';\r\n\r\nconst ResultsTable = ({ results }) => {\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Year</th>\r\n          <th>Starting Amount</th>\r\n          <th>Yearly Deposit</th>\r\n          <th>Interest Rate (%)</th>\r\n          <th>Interest Earned</th>\r\n          <th>Total Amount</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {results.map((result, index) => (\r\n          <tr key={index}>\r\n            <td>{result.year}</td>\r\n            <td>{result.startingAmount.toFixed(2)}</td>\r\n            <td>{result.monthlyDeposit.toFixed(2)}</td>\r\n            <td>{result.interestRate.toFixed(2)}</td>\r\n            <td>{result.interestEarned.toFixed(2)}</td>\r\n            <td>{result.totalAmount.toFixed(2)}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\n\r\nexport default ResultsTable;\r\n\r\n","// ExportButton.js\r\nimport React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ExcelJS from 'exceljs';\r\n\r\nconst ExportButton = ({ results }) => {\r\n  const handleExport = async () => {\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet('Results');\r\n\r\n    worksheet.columns = [\r\n      { header: 'Year', key: 'year' },\r\n      { header: 'Starting Amount', key: 'startingAmount' },\r\n      { header: 'Monthly Deposit', key: 'monthlyDeposit' },\r\n      { header: 'Interest Rate (%)', key: 'interestRate' },\r\n      { header: 'Interest Earned', key: 'interestEarned' },\r\n      { header: 'Total Amount', key: 'totalAmount' },\r\n    ];\r\n\r\n    results.forEach((result) => {\r\n      worksheet.addRow(result);\r\n    });\r\n\r\n    const blob = await workbook.xlsx.writeBuffer();\r\n    const url = URL.createObjectURL(new Blob([blob]));\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'financial_results.xlsx';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Button variant=\"outlined\" onClick={handleExport} color=\"primary\">\r\n        Export to Excel\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ExportButton;\r\n","// App.js\nimport React, { useState } from 'react';\nimport InputFields from './components/InputFields/InputFields';\nimport ResultsTable from './components/ResultsTable/ResultsTable';\nimport ExportButton from './components/ExportButton';\nimport { CssBaseline, ThemeProvider, createTheme, Button, Typography } from '@mui/material';\nimport './App.css'; // Import styles.css\nimport './styles.css';\n\n// Create a custom Material-UI theme\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Roboto, sans-serif', // Use your chosen font\n  },\n});\n\n\n// Calculation logic function\nconst calculateResults = (initialAmount, monthlyDeposit, interestRate, years) => {\n  const results = [];\n\n  let totalAmount = initialAmount;\n  for (let year = 1; year <= years; year++) {\n    const interestEarned = (totalAmount * interestRate) / 100 ; // Monthly interest\n    totalAmount += monthlyDeposit * 12 + interestEarned;\n\n    results.push({\n      year,\n      startingAmount: totalAmount - (monthlyDeposit * 12 + interestEarned),\n      monthlyDeposit: monthlyDeposit*12,\n      interestRate,\n      interestEarned,\n      totalAmount,\n    });\n  }\n\n  return results;\n};\n\nconst App = () => {\n  const [initialValues, setInitialValues] = useState({\n    initialAmount: 1000,\n    monthlyDeposit : 100,\n    interestRate: 7,\n  });\n\n  // Event handler for input changes\n  const handleInputChange = (field, value) => {\n    setInitialValues((prevValues) => ({\n      ...prevValues,\n      [field]: parseFloat(value), // Convert to float if needed\n    }));\n  };\n\n  const [results, setResults] = useState([]);\n\n  const handleCalculate = () => {\n    const calculatedResults = calculateResults(\n      initialValues.initialAmount,\n      initialValues.monthlyDeposit ,\n      initialValues.interestRate,\n      50 // Number of years you want to calculate\n    );\n    setResults(calculatedResults);\n  };\n\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <div className=\"app-container\">\n          <Typography variant=\"h2\" gutterBottom className=\"title\">\n            Financial Freedom Calculator\n          </Typography>\n          <InputFields initialValues={initialValues} onInputChange={handleInputChange} />\n          <Button variant=\"contained\" onClick={handleCalculate} color=\"primary\">\n            Calculate\n          </Button>\n          {results.length > 0 && (\n            <>\n              <ExportButton results={results} /> {/* Move ExportButton here */}\n              <ResultsTable results={results} />\n            </>\n          )}\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}